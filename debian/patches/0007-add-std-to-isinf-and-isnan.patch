Author: Gijs Molenaar <gijs@pythonic.nl>
Description: add std to isinf and isnan
 Backport from casacore git
Origin: https://github.com/casacore/casacore/pull/338
--- a/casa/BasicMath/Math.cc
+++ b/casa/BasicMath/Math.cc
@@ -178,7 +178,7 @@
   // infinite. I can only have access to Solaris, Linux and SGI machines to
   // determine this.
 #if defined(AIPS_LINUX)
-  return (isinf(Double(val)));
+  return (std::isinf(Double(val)));
 #elif defined(AIPS_DARWIN)
   return (std::isinf(Double(val)));
 #elif defined(AIPS_SOLARIS) || defined(AIPS_IRIX)
@@ -212,7 +212,7 @@
   // infinite. I can only have access to Solaris, Linux and SGI machines to
   // determine this.
 #if defined(AIPS_LINUX)
-  return (isinf(Double(val)));
+  return (std::isinf(Double(val)));
 #elif defined(AIPS_DARWIN)
   return (std::isinf(Double(val)));
 #elif defined(AIPS_SOLARIS) || defined(AIPS_IRIX)
--- a/casa/BasicMath/test/tMathNaN.cc
+++ b/casa/BasicMath/test/tMathNaN.cc
@@ -43,7 +43,7 @@
 			    ((*(Int *)(x) & 0x007fffff) != 0x00000000))
 
 inline Bool isNaN_isnan(Float val) {
-  return (isnan(Double(val)));
+  return (std::isnan(Double(val)));
 }
 
 inline Bool isNaN_isnanf(const Float& val) {
